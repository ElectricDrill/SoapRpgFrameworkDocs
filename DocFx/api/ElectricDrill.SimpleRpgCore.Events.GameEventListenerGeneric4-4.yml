### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4
  id: GameEventListenerGeneric4`4
  parent: ElectricDrill.SimpleRpgCore.Events
  children:
  - ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised(`0,`1,`2,`3)
  - ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._event
  - ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._response
  langs:
  - csharp
  - vb
  name: GameEventListenerGeneric4<T, U, W, K>
  nameWithType: GameEventListenerGeneric4<T, U, W, K>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4<T, U, W, K>
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GameEventListenerGeneric4
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
    startLine: 4
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: 'public class GameEventListenerGeneric4<T, U, W, K> : MonoBehaviour'
    typeParameters:
    - id: T
    - id: U
    - id: W
    - id: K
    content.vb: Public Class GameEventListenerGeneric4(Of T, U, W, K) Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  nameWithType.vb: GameEventListenerGeneric4(Of T, U, W, K)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4(Of T, U, W, K)
  name.vb: GameEventListenerGeneric4(Of T, U, W, K)
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._event
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._event
  id: _event
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4
  langs:
  - csharp
  - vb
  name: _event
  nameWithType: GameEventListenerGeneric4<T, U, W, K>._event
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4<T, U, W, K>._event
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: _event
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
    startLine: 6
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: >-
      [SerializeField]

      protected GameEventGeneric4<T, U, W, K> _event
    return:
      type: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4{{T},{U},{W},{K}}
    content.vb: >-
      <SerializeField>

      Protected _event As GameEventGeneric4(Of T, U, W, K)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: GameEventListenerGeneric4(Of T, U, W, K)._event
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4(Of T, U, W, K)._event
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._response
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4._response
  id: _response
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4
  langs:
  - csharp
  - vb
  name: _response
  nameWithType: GameEventListenerGeneric4<T, U, W, K>._response
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4<T, U, W, K>._response
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: _response
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
    startLine: 7
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: >-
      [SerializeField]

      protected UnityEvent<T, U, W, K> _response
    return:
      type: UnityEngine.Events.UnityEvent{{T},{U},{W},{K}}
    content.vb: >-
      <SerializeField>

      Protected _response As UnityEvent(Of T, U, W, K)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: GameEventListenerGeneric4(Of T, U, W, K)._response
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4(Of T, U, W, K)._response
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised(`0,`1,`2,`3)
  commentId: M:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised(`0,`1,`2,`3)
  id: OnEventRaised(`0,`1,`2,`3)
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4
  langs:
  - csharp
  - vb
  name: OnEventRaised(T, U, W, K)
  nameWithType: GameEventListenerGeneric4<T, U, W, K>.OnEventRaised(T, U, W, K)
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4<T, U, W, K>.OnEventRaised(T, U, W, K)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnEventRaised
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventListenerGeneric4.cs
    startLine: 17
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public void OnEventRaised(T contextT, U contextU, W contextW, K contextK)
    parameters:
    - id: contextT
      type: '{T}'
    - id: contextU
      type: '{U}'
    - id: contextW
      type: '{W}'
    - id: contextK
      type: '{K}'
    content.vb: Public Sub OnEventRaised(contextT As T, contextU As U, contextW As W, contextK As K)
  overload: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised*
  nameWithType.vb: GameEventListenerGeneric4(Of T, U, W, K).OnEventRaised(T, U, W, K)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4(Of T, U, W, K).OnEventRaised(T, U, W, K)
references:
- uid: ElectricDrill.SimpleRpgCore.Events
  commentId: N:ElectricDrill.SimpleRpgCore.Events
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Events
  nameWithType: ElectricDrill.SimpleRpgCore.Events
  fullName: ElectricDrill.SimpleRpgCore.Events
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4{{T},{U},{W},{K}}
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4{`0,`1,`2,`3}
  parent: ElectricDrill.SimpleRpgCore.Events
  definition: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  name: GameEventGeneric4<T, U, W, K>
  nameWithType: GameEventGeneric4<T, U, W, K>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4<T, U, W, K>
  nameWithType.vb: GameEventGeneric4(Of T, U, W, K)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4(Of T, U, W, K)
  name.vb: GameEventGeneric4(Of T, U, W, K)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
    name: GameEventGeneric4
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
    name: GameEventGeneric4
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  name: GameEventGeneric4<T, U, W, K>
  nameWithType: GameEventGeneric4<T, U, W, K>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4<T, U, W, K>
  nameWithType.vb: GameEventGeneric4(Of T, U, W, K)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4(Of T, U, W, K)
  name.vb: GameEventGeneric4(Of T, U, W, K)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
    name: GameEventGeneric4
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4`4
    name: GameEventGeneric4
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric4-4.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: )
- uid: UnityEngine.Events.UnityEvent{{T},{U},{W},{K}}
  commentId: T:UnityEngine.Events.UnityEvent{`0,`1,`2,`3}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`4
  name: UnityEvent<T, U, W, K>
  nameWithType: UnityEvent<T, U, W, K>
  fullName: UnityEngine.Events.UnityEvent<T, U, W, K>
  nameWithType.vb: UnityEvent(Of T, U, W, K)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T, U, W, K)
  name.vb: UnityEvent(Of T, U, W, K)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: ','
  - name: " "
  - name: W
  - name: ','
  - name: " "
  - name: K
  - name: )
- uid: UnityEngine.Events.UnityEvent`4
  commentId: T:UnityEngine.Events.UnityEvent`4
  isExternal: true
  name: UnityEvent<T0, T1, T2, T3>
  nameWithType: UnityEvent<T0, T1, T2, T3>
  fullName: UnityEngine.Events.UnityEvent<T0, T1, T2, T3>
  nameWithType.vb: UnityEvent(Of T0, T1, T2, T3)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0, T1, T2, T3)
  name.vb: UnityEvent(Of T0, T1, T2, T3)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4`4.OnEventRaised
  href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4-4.html#ElectricDrill_SimpleRpgCore_Events_GameEventListenerGeneric4_4_OnEventRaised__0__1__2__3_
  name: OnEventRaised
  nameWithType: GameEventListenerGeneric4<T, U, W, K>.OnEventRaised
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4<T, U, W, K>.OnEventRaised
  nameWithType.vb: GameEventListenerGeneric4(Of T, U, W, K).OnEventRaised
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric4(Of T, U, W, K).OnEventRaised
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: '{W}'
  commentId: '!:W'
  definition: W
  name: W
  nameWithType: W
  fullName: W
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: W
  name: W
  nameWithType: W
  fullName: W
- uid: K
  name: K
  nameWithType: K
  fullName: K
