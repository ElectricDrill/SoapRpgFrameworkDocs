### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  id: GameEventGenerator.GameEventDefinition
  parent: ElectricDrill.SimpleRpgCore.Events
  children:
  - ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.documentation
  - ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.eventName
  - ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.isGenerated
  - ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.parameters
  langs:
  - csharp
  - vb
  name: GameEventGenerator.GameEventDefinition
  nameWithType: GameEventGenerator.GameEventDefinition
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GameEventDefinition
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
    startLine: 29
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: >-
      [Serializable]

      public class GameEventGenerator.GameEventDefinition
    content.vb: >-
      <Serializable>

      Public Class GameEventGenerator.GameEventDefinition
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.eventName
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.eventName
  id: eventName
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  langs:
  - csharp
  - vb
  name: eventName
  nameWithType: GameEventGenerator.GameEventDefinition.eventName
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.eventName
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: eventName
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
    startLine: 32
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public string eventName
    return:
      type: System.String
    content.vb: Public eventName As String
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.documentation
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.documentation
  id: documentation
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  langs:
  - csharp
  - vb
  name: documentation
  nameWithType: GameEventGenerator.GameEventDefinition.documentation
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.documentation
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: documentation
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
    startLine: 33
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: >-
      [HideInInspector]

      public string documentation
    return:
      type: System.String
    content.vb: >-
      <HideInInspector>

      Public documentation As String
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.parameters
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.parameters
  id: parameters
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  langs:
  - csharp
  - vb
  name: parameters
  nameWithType: GameEventGenerator.GameEventDefinition.parameters
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.parameters
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: parameters
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
    startLine: 34
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public List<GameEventGenerator.EventParameter> parameters
    return:
      type: System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter}
    content.vb: Public parameters As List(Of GameEventGenerator.EventParameter)
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.isGenerated
  commentId: F:ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.isGenerated
  id: isGenerated
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition
  langs:
  - csharp
  - vb
  name: isGenerated
  nameWithType: GameEventGenerator.GameEventDefinition.isGenerated
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.GameEventDefinition.isGenerated
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: isGenerated
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/GameEventsGenerator.cs
    startLine: 35
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: >-
      [HideInInspector]

      public bool isGenerated
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public isGenerated As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
references:
- uid: ElectricDrill.SimpleRpgCore.Events
  commentId: N:ElectricDrill.SimpleRpgCore.Events
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Events
  nameWithType: ElectricDrill.SimpleRpgCore.Events
  fullName: ElectricDrill.SimpleRpgCore.Events
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter}
  commentId: T:System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.html
  name: List<GameEventGenerator.EventParameter>
  nameWithType: List<GameEventGenerator.EventParameter>
  fullName: System.Collections.Generic.List<ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter>
  nameWithType.vb: List(Of GameEventGenerator.EventParameter)
  fullName.vb: System.Collections.Generic.List(Of ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter)
  name.vb: List(Of GameEventGenerator.EventParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator
    name: GameEventGenerator
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter
    name: EventParameter
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator
    name: GameEventGenerator
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter
    name: EventParameter
    href: ElectricDrill.SimpleRpgCore.Events.GameEventGenerator.EventParameter.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
