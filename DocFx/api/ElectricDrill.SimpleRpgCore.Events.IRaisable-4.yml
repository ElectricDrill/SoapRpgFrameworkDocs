### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`4
  commentId: T:ElectricDrill.SimpleRpgCore.Events.IRaisable`4
  id: IRaisable`4
  parent: ElectricDrill.SimpleRpgCore.Events
  children:
  - ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise(`0,`1,`2,`3)
  langs:
  - csharp
  - vb
  name: IRaisable<T, U, V, W>
  nameWithType: IRaisable<T, U, V, W>
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U, V, W>
  type: Interface
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/IRaisable.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: IRaisable
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/IRaisable.cs
    startLine: 17
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public interface IRaisable<T, U, V, W>
    typeParameters:
    - id: T
    - id: U
    - id: V
    - id: W
    content.vb: Public Interface IRaisable(Of T, U, V, W)
  nameWithType.vb: IRaisable(Of T, U, V, W)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U, V, W)
  name.vb: IRaisable(Of T, U, V, W)
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise(`0,`1,`2,`3)
  commentId: M:ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise(`0,`1,`2,`3)
  id: Raise(`0,`1,`2,`3)
  parent: ElectricDrill.SimpleRpgCore.Events.IRaisable`4
  langs:
  - csharp
  - vb
  name: Raise(T, U, V, W)
  nameWithType: IRaisable<T, U, V, W>.Raise(T, U, V, W)
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U, V, W>.Raise(T, U, V, W)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/IRaisable.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Raise
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/IRaisable.cs
    startLine: 19
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: void Raise(T context1, U context2, V context3, W context4)
    parameters:
    - id: context1
      type: '{T}'
    - id: context2
      type: '{U}'
    - id: context3
      type: '{V}'
    - id: context4
      type: '{W}'
    content.vb: Sub Raise(context1 As T, context2 As U, context3 As V, context4 As W)
  overload: ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise*
  nameWithType.vb: IRaisable(Of T, U, V, W).Raise(T, U, V, W)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U, V, W).Raise(T, U, V, W)
references:
- uid: ElectricDrill.SimpleRpgCore.Events
  commentId: N:ElectricDrill.SimpleRpgCore.Events
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Events
  nameWithType: ElectricDrill.SimpleRpgCore.Events
  fullName: ElectricDrill.SimpleRpgCore.Events
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Events.IRaisable`4.Raise
  href: ElectricDrill.SimpleRpgCore.Events.IRaisable-4.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_4_Raise__0__1__2__3_
  name: Raise
  nameWithType: IRaisable<T, U, V, W>.Raise
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U, V, W>.Raise
  nameWithType.vb: IRaisable(Of T, U, V, W).Raise
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U, V, W).Raise
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: '{W}'
  commentId: '!:W'
  definition: W
  name: W
  nameWithType: W
  fullName: W
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: W
  name: W
  nameWithType: W
  fullName: W
