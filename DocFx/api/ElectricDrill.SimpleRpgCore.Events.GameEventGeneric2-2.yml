### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  id: GameEventGeneric2`2
  parent: ElectricDrill.SimpleRpgCore.Events
  children:
  - ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.OnEventRaised
  - ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise(`0,`1)
  - ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  - ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  langs:
  - csharp
  - vb
  name: GameEventGeneric2<T, U>
  nameWithType: GameEventGeneric2<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GameEventGeneric2
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
    startLine: 6
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: 'public abstract class GameEventGeneric2<T, U> : ScriptableObject, IRaisable<T, U>'
    typeParameters:
    - id: T
    - id: U
    content.vb: Public MustInherit Class GameEventGeneric2(Of T, U) Inherits ScriptableObject Implements IRaisable(Of T, U)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  implements:
  - ElectricDrill.SimpleRpgCore.Events.IRaisable{{T},{U}}
  nameWithType.vb: GameEventGeneric2(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U)
  name.vb: GameEventGeneric2(Of T, U)
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.OnEventRaised
  commentId: E:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.OnEventRaised
  id: OnEventRaised
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  langs:
  - csharp
  - vb
  name: OnEventRaised
  nameWithType: GameEventGeneric2<T, U>.OnEventRaised
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.OnEventRaised
  type: Event
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnEventRaised
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
    startLine: 15
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public event Action<T, U> OnEventRaised
    return:
      type: System.Action{{T},{U}}
    content.vb: Public Event OnEventRaised As Action(Of T, U)
  nameWithType.vb: GameEventGeneric2(Of T, U).OnEventRaised
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).OnEventRaised
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise(`0,`1)
  commentId: M:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise(`0,`1)
  id: Raise(`0,`1)
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  langs:
  - csharp
  - vb
  name: Raise(T, U)
  nameWithType: GameEventGeneric2<T, U>.Raise(T, U)
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.Raise(T, U)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Raise
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
    startLine: 20
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  example: []
  syntax:
    content: public void Raise(T context1, U context2)
    parameters:
    - id: context1
      type: '{T}'
    - id: context2
      type: '{U}'
    content.vb: Public Sub Raise(context1 As T, context2 As U)
  overload: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise*
  implements:
  - ElectricDrill.SimpleRpgCore.Events.IRaisable{{T},{U}}.Raise({T},{U})
  nameWithType.vb: GameEventGeneric2(Of T, U).Raise(T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).Raise(T, U)
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  commentId: M:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  id: RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  langs:
  - csharp
  - vb
  name: RegisterListener(GameEventListenerGeneric2<T, U>)
  nameWithType: GameEventGeneric2<T, U>.RegisterListener(GameEventListenerGeneric2<T, U>)
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2<T, U>)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: RegisterListener
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
    startLine: 30
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public void RegisterListener(GameEventListenerGeneric2<T, U> listener)
    parameters:
    - id: listener
      type: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{{T},{U}}
    content.vb: Public Sub RegisterListener(listener As GameEventListenerGeneric2(Of T, U))
  overload: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener*
  nameWithType.vb: GameEventGeneric2(Of T, U).RegisterListener(GameEventListenerGeneric2(Of T, U))
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).RegisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2(Of T, U))
  name.vb: RegisterListener(GameEventListenerGeneric2(Of T, U))
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  commentId: M:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  id: UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1})
  parent: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2
  langs:
  - csharp
  - vb
  name: UnregisterListener(GameEventListenerGeneric2<T, U>)
  nameWithType: GameEventGeneric2<T, U>.UnregisterListener(GameEventListenerGeneric2<T, U>)
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2<T, U>)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: UnregisterListener
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Events/GameEventGeneric2.cs
    startLine: 35
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Events
  syntax:
    content: public void UnregisterListener(GameEventListenerGeneric2<T, U> listener)
    parameters:
    - id: listener
      type: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{{T},{U}}
    content.vb: Public Sub UnregisterListener(listener As GameEventListenerGeneric2(Of T, U))
  overload: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener*
  nameWithType.vb: GameEventGeneric2(Of T, U).UnregisterListener(GameEventListenerGeneric2(Of T, U))
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).UnregisterListener(ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2(Of T, U))
  name.vb: UnregisterListener(GameEventListenerGeneric2(Of T, U))
references:
- uid: ElectricDrill.SimpleRpgCore.Events
  commentId: N:ElectricDrill.SimpleRpgCore.Events
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Events
  nameWithType: ElectricDrill.SimpleRpgCore.Events
  fullName: ElectricDrill.SimpleRpgCore.Events
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Events
    name: Events
    href: ElectricDrill.SimpleRpgCore.Events.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable{{T},{U}}
  commentId: T:ElectricDrill.SimpleRpgCore.Events.IRaisable{`0,`1}
  parent: ElectricDrill.SimpleRpgCore.Events
  definition: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
  href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  name: IRaisable<T, U>
  nameWithType: IRaisable<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U>
  nameWithType.vb: IRaisable(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U)
  name.vb: IRaisable(Of T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
    name: IRaisable
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
    name: IRaisable
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
  commentId: T:ElectricDrill.SimpleRpgCore.Events.IRaisable`2
  href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  name: IRaisable<T, U>
  nameWithType: IRaisable<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U>
  nameWithType.vb: IRaisable(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U)
  name.vb: IRaisable(Of T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
    name: IRaisable
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2
    name: IRaisable
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: System.Action{{T},{U}}
  commentId: T:System.Action{`0,`1}
  parent: System
  definition: System.Action`2
  name: Action<T, U>
  nameWithType: Action<T, U>
  fullName: System.Action<T, U>
  nameWithType.vb: Action(Of T, U)
  fullName.vb: System.Action(Of T, U)
  name.vb: Action(Of T, U)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.Raise
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2-2.html#ElectricDrill_SimpleRpgCore_Events_GameEventGeneric2_2_Raise__0__1_
  name: Raise
  nameWithType: GameEventGeneric2<T, U>.Raise
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.Raise
  nameWithType.vb: GameEventGeneric2(Of T, U).Raise
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).Raise
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable{{T},{U}}.Raise({T},{U})
  commentId: M:ElectricDrill.SimpleRpgCore.Events.IRaisable{`0,`1}.Raise(`0,`1)
  parent: ElectricDrill.SimpleRpgCore.Events.IRaisable{{T},{U}}
  definition: ElectricDrill.SimpleRpgCore.Events.IRaisable`2.Raise(`0,`1)
  href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  name: Raise(T, U)
  nameWithType: IRaisable<T, U>.Raise(T, U)
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U>.Raise(T, U)
  nameWithType.vb: IRaisable(Of T, U).Raise(T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U).Raise(T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable{`0,`1}.Raise(`0,`1)
    name: Raise
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable{`0,`1}.Raise(`0,`1)
    name: Raise
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2.Raise(`0,`1)
  commentId: M:ElectricDrill.SimpleRpgCore.Events.IRaisable`2.Raise(`0,`1)
  href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  name: Raise(T, U)
  nameWithType: IRaisable<T, U>.Raise(T, U)
  fullName: ElectricDrill.SimpleRpgCore.Events.IRaisable<T, U>.Raise(T, U)
  nameWithType.vb: IRaisable(Of T, U).Raise(T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.IRaisable(Of T, U).Raise(T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2.Raise(`0,`1)
    name: Raise
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.IRaisable`2.Raise(`0,`1)
    name: Raise
    href: ElectricDrill.SimpleRpgCore.Events.IRaisable-2.html#ElectricDrill_SimpleRpgCore_Events_IRaisable_2_Raise__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.RegisterListener
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2-2.html#ElectricDrill_SimpleRpgCore_Events_GameEventGeneric2_2_RegisterListener_ElectricDrill_SimpleRpgCore_Events_GameEventListenerGeneric2__0__1__
  name: RegisterListener
  nameWithType: GameEventGeneric2<T, U>.RegisterListener
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.RegisterListener
  nameWithType.vb: GameEventGeneric2(Of T, U).RegisterListener
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).RegisterListener
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{{T},{U}}
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2{`0,`1}
  parent: ElectricDrill.SimpleRpgCore.Events
  definition: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
  href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  name: GameEventListenerGeneric2<T, U>
  nameWithType: GameEventListenerGeneric2<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2<T, U>
  nameWithType.vb: GameEventListenerGeneric2(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2(Of T, U)
  name.vb: GameEventListenerGeneric2(Of T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
    name: GameEventListenerGeneric2
    href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
    name: GameEventListenerGeneric2
    href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
  commentId: T:ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
  href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  name: GameEventListenerGeneric2<T, U>
  nameWithType: GameEventListenerGeneric2<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2<T, U>
  nameWithType.vb: GameEventListenerGeneric2(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2(Of T, U)
  name.vb: GameEventListenerGeneric2(Of T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
    name: GameEventListenerGeneric2
    href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2`2
    name: GameEventListenerGeneric2
    href: ElectricDrill.SimpleRpgCore.Events.GameEventListenerGeneric2-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2`2.UnregisterListener
  href: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2-2.html#ElectricDrill_SimpleRpgCore_Events_GameEventGeneric2_2_UnregisterListener_ElectricDrill_SimpleRpgCore_Events_GameEventListenerGeneric2__0__1__
  name: UnregisterListener
  nameWithType: GameEventGeneric2<T, U>.UnregisterListener
  fullName: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2<T, U>.UnregisterListener
  nameWithType.vb: GameEventGeneric2(Of T, U).UnregisterListener
  fullName.vb: ElectricDrill.SimpleRpgCore.Events.GameEventGeneric2(Of T, U).UnregisterListener
