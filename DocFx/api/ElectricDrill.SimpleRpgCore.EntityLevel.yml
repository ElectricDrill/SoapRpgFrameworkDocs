### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.EntityLevel
  commentId: T:ElectricDrill.SimpleRpgCore.EntityLevel
  id: EntityLevel
  parent: ElectricDrill.SimpleRpgCore
  children:
  - ElectricDrill.SimpleRpgCore.EntityLevel.AddExp(System.Int64)
  - ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience
  - ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
  - ElectricDrill.SimpleRpgCore.EntityLevel.Level
  - ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience
  - ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
  - ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp(System.Int64)
  - ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience
  - ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit(ElectricDrill.SimpleRpgCore.EntityLevel)~System.Int32
  langs:
  - csharp
  - vb
  name: EntityLevel
  nameWithType: EntityLevel
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: EntityLevel
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 11
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: >-
      [Serializable]

      public class EntityLevel : ILevelable
    content.vb: >-
      <Serializable>

      Public Class EntityLevel Implements ILevelable
  inheritance:
  - System.Object
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
  commentId: P:ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
  id: OnLevelUp
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: OnLevelUp
  nameWithType: EntityLevel.OnLevelUp
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnLevelUp
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 37
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public virtual Action<int> OnLevelUp { get; set; }
    parameters: []
    return:
      type: System.Action{System.Int32}
    content.vb: Public Overridable Property OnLevelUp As Action(Of Integer)
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp*
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.Level
  commentId: P:ElectricDrill.SimpleRpgCore.EntityLevel.Level
  id: Level
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: EntityLevel.Level
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.Level
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Level
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 38
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public virtual int Level { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Level As Integer
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.Level*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.Level
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp(System.Int64)
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.AddExp(System.Int64)
  id: AddExp(System.Int64)
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: AddExp(long)
  nameWithType: EntityLevel.AddExp(long)
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp(long)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: AddExp
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 77
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public void AddExp(long amount)
    parameters:
    - id: amount
      type: System.Int64
    content.vb: Public Sub AddExp(amount As Long)
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.AddExp(System.Int64)
  nameWithType.vb: EntityLevel.AddExp(Long)
  fullName.vb: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp(Long)
  name.vb: AddExp(Long)
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp(System.Int64)
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp(System.Int64)
  id: SetTotalCurrentExp(System.Int64)
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: SetTotalCurrentExp(long)
  nameWithType: EntityLevel.SetTotalCurrentExp(long)
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp(long)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SetTotalCurrentExp
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 101
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public void SetTotalCurrentExp(long totalCurrentExperience)
    parameters:
    - id: totalCurrentExperience
      type: System.Int64
    content.vb: Public Sub SetTotalCurrentExp(totalCurrentExperience As Long)
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(System.Int64)
  nameWithType.vb: EntityLevel.SetTotalCurrentExp(Long)
  fullName.vb: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp(Long)
  name.vb: SetTotalCurrentExp(Long)
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
  commentId: P:ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
  id: CurrentTotalExperience
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: CurrentTotalExperience
  nameWithType: EntityLevel.CurrentTotalExperience
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CurrentTotalExperience
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 116
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public long CurrentTotalExperience { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CurrentTotalExperience As Long
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.CurrentTotalExperience
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience
  id: CurrentLevelTotalExperience
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: CurrentLevelTotalExperience()
  nameWithType: EntityLevel.CurrentLevelTotalExperience()
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CurrentLevelTotalExperience
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 117
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public long CurrentLevelTotalExperience()
    return:
      type: System.Int64
    content.vb: Public Function CurrentLevelTotalExperience() As Long
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience
  id: NextLevelTotalExperience
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: NextLevelTotalExperience()
  nameWithType: EntityLevel.NextLevelTotalExperience()
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: NextLevelTotalExperience
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 121
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public long NextLevelTotalExperience()
    return:
      type: System.Int64
    content.vb: Public Function NextLevelTotalExperience() As Long
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit(ElectricDrill.SimpleRpgCore.EntityLevel)~System.Int32
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit(ElectricDrill.SimpleRpgCore.EntityLevel)~System.Int32
  id: op_Implicit(ElectricDrill.SimpleRpgCore.EntityLevel)~System.Int32
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: implicit operator int(EntityLevel)
  nameWithType: EntityLevel.implicit operator int(EntityLevel)
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.implicit operator int(ElectricDrill.SimpleRpgCore.EntityLevel)
  type: Operator
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: op_Implicit
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 129
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public static implicit operator int(EntityLevel entityLevel)
    parameters:
    - id: entityLevel
      type: ElectricDrill.SimpleRpgCore.EntityLevel
    return:
      type: System.Int32
    content.vb: Public Shared Widening Operator CType(entityLevel As EntityLevel) As Integer
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit*
  nameWithType.vb: EntityLevel.CType(EntityLevel)
  fullName.vb: ElectricDrill.SimpleRpgCore.EntityLevel.CType(ElectricDrill.SimpleRpgCore.EntityLevel)
  name.vb: CType(EntityLevel)
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience
  commentId: M:ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience
  id: ValidateExperience
  parent: ElectricDrill.SimpleRpgCore.EntityLevel
  langs:
  - csharp
  - vb
  name: ValidateExperience()
  nameWithType: EntityLevel.ValidateExperience()
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Experience/EntityLevel.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: ValidateExperience
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Experience/EntityLevel.cs
    startLine: 132
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  example: []
  syntax:
    content: public void ValidateExperience()
    content.vb: Public Sub ValidateExperience()
  overload: ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience*
  implements:
  - ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience
references:
- uid: ElectricDrill.SimpleRpgCore
  commentId: N:ElectricDrill.SimpleRpgCore
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore
  nameWithType: ElectricDrill.SimpleRpgCore
  fullName: ElectricDrill.SimpleRpgCore
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ElectricDrill.SimpleRpgCore.ILevelable
  commentId: T:ElectricDrill.SimpleRpgCore.ILevelable
  parent: ElectricDrill.SimpleRpgCore
  href: ElectricDrill.SimpleRpgCore.ILevelable.html
  name: ILevelable
  nameWithType: ILevelable
  fullName: ElectricDrill.SimpleRpgCore.ILevelable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_OnLevelUp
  name: OnLevelUp
  nameWithType: EntityLevel.OnLevelUp
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.OnLevelUp
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<int>
  nameWithType: Action<int>
  fullName: System.Action<int>
  nameWithType.vb: Action(Of Integer)
  fullName.vb: System.Action(Of Integer)
  name.vb: Action(Of Integer)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.Level*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.Level
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_Level
  name: Level
  nameWithType: EntityLevel.Level
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.Level
- uid: ElectricDrill.SimpleRpgCore.ILevelable.Level
  commentId: P:ElectricDrill.SimpleRpgCore.ILevelable.Level
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_Level
  name: Level
  nameWithType: ILevelable.Level
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.Level
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.AddExp
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_AddExp_System_Int64_
  name: AddExp
  nameWithType: EntityLevel.AddExp
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.AddExp
- uid: ElectricDrill.SimpleRpgCore.ILevelable.AddExp(System.Int64)
  commentId: M:ElectricDrill.SimpleRpgCore.ILevelable.AddExp(System.Int64)
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  isExternal: true
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_AddExp_System_Int64_
  name: AddExp(long)
  nameWithType: ILevelable.AddExp(long)
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.AddExp(long)
  nameWithType.vb: ILevelable.AddExp(Long)
  fullName.vb: ElectricDrill.SimpleRpgCore.ILevelable.AddExp(Long)
  name.vb: AddExp(Long)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.AddExp(System.Int64)
    name: AddExp
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_AddExp_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.AddExp(System.Int64)
    name: AddExp
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_AddExp_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_SetTotalCurrentExp_System_Int64_
  name: SetTotalCurrentExp
  nameWithType: EntityLevel.SetTotalCurrentExp
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.SetTotalCurrentExp
- uid: ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(System.Int64)
  commentId: M:ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(System.Int64)
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  isExternal: true
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_SetTotalCurrentExp_System_Int64_
  name: SetTotalCurrentExp(long)
  nameWithType: ILevelable.SetTotalCurrentExp(long)
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(long)
  nameWithType.vb: ILevelable.SetTotalCurrentExp(Long)
  fullName.vb: ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(Long)
  name.vb: SetTotalCurrentExp(Long)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(System.Int64)
    name: SetTotalCurrentExp
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_SetTotalCurrentExp_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.SetTotalCurrentExp(System.Int64)
    name: SetTotalCurrentExp
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_SetTotalCurrentExp_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_CurrentTotalExperience
  name: CurrentTotalExperience
  nameWithType: EntityLevel.CurrentTotalExperience
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentTotalExperience
- uid: ElectricDrill.SimpleRpgCore.ILevelable.CurrentTotalExperience
  commentId: P:ElectricDrill.SimpleRpgCore.ILevelable.CurrentTotalExperience
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_CurrentTotalExperience
  name: CurrentTotalExperience
  nameWithType: ILevelable.CurrentTotalExperience
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.CurrentTotalExperience
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_CurrentLevelTotalExperience
  name: CurrentLevelTotalExperience
  nameWithType: EntityLevel.CurrentLevelTotalExperience
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.CurrentLevelTotalExperience
- uid: ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience
  commentId: M:ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_CurrentLevelTotalExperience
  name: CurrentLevelTotalExperience()
  nameWithType: ILevelable.CurrentLevelTotalExperience()
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience()
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience
    name: CurrentLevelTotalExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_CurrentLevelTotalExperience
  - name: (
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.CurrentLevelTotalExperience
    name: CurrentLevelTotalExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_CurrentLevelTotalExperience
  - name: (
  - name: )
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_NextLevelTotalExperience
  name: NextLevelTotalExperience
  nameWithType: EntityLevel.NextLevelTotalExperience
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.NextLevelTotalExperience
- uid: ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience
  commentId: M:ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_NextLevelTotalExperience
  name: NextLevelTotalExperience()
  nameWithType: ILevelable.NextLevelTotalExperience()
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience()
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience
    name: NextLevelTotalExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_NextLevelTotalExperience
  - name: (
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.NextLevelTotalExperience
    name: NextLevelTotalExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_NextLevelTotalExperience
  - name: (
  - name: )
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.op_Implicit
  name: implicit operator
  nameWithType: EntityLevel.implicit operator
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.implicit operator
  nameWithType.vb: EntityLevel.CType
  fullName.vb: ElectricDrill.SimpleRpgCore.EntityLevel.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: ElectricDrill.SimpleRpgCore.EntityLevel
  commentId: T:ElectricDrill.SimpleRpgCore.EntityLevel
  parent: ElectricDrill.SimpleRpgCore
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html
  name: EntityLevel
  nameWithType: EntityLevel
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel
- uid: ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience*
  commentId: Overload:ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience
  href: ElectricDrill.SimpleRpgCore.EntityLevel.html#ElectricDrill_SimpleRpgCore_EntityLevel_ValidateExperience
  name: ValidateExperience
  nameWithType: EntityLevel.ValidateExperience
  fullName: ElectricDrill.SimpleRpgCore.EntityLevel.ValidateExperience
- uid: ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience
  commentId: M:ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience
  parent: ElectricDrill.SimpleRpgCore.ILevelable
  href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_ValidateExperience
  name: ValidateExperience()
  nameWithType: ILevelable.ValidateExperience()
  fullName: ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience()
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience
    name: ValidateExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_ValidateExperience
  - name: (
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.ILevelable.ValidateExperience
    name: ValidateExperience
    href: ElectricDrill.SimpleRpgCore.ILevelable.html#ElectricDrill_SimpleRpgCore_ILevelable_ValidateExperience
  - name: (
  - name: )
