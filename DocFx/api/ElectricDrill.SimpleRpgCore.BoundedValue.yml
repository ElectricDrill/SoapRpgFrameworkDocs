### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.BoundedValue
  commentId: T:ElectricDrill.SimpleRpgCore.BoundedValue
  id: BoundedValue
  parent: ElectricDrill.SimpleRpgCore
  children:
  - ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
  - ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
  - ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
  - ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
  langs:
  - csharp
  - vb
  name: BoundedValue
  nameWithType: BoundedValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/BoundedValue.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: BoundedValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/BoundedValue.cs
    startLine: 5
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: 'public abstract class BoundedValue : ScriptableObject'
    content.vb: Public MustInherit Class BoundedValue Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - ElectricDrill.SimpleRpgCore.Attributes.Attribute
  - ElectricDrill.SimpleRpgCore.Stats.Stat
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
  commentId: P:ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
  id: HasMaxValue
  parent: ElectricDrill.SimpleRpgCore.BoundedValue
  langs:
  - csharp
  - vb
  name: HasMaxValue
  nameWithType: BoundedValue.HasMaxValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/BoundedValue.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: HasMaxValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/BoundedValue.cs
    startLine: 12
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public bool HasMaxValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasMaxValue As Boolean
  overload: ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue*
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
  commentId: P:ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
  id: MaxValue
  parent: ElectricDrill.SimpleRpgCore.BoundedValue
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: BoundedValue.MaxValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/BoundedValue.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: MaxValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/BoundedValue.cs
    startLine: 13
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public long MaxValue { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property MaxValue As Long
  overload: ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue*
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
  commentId: P:ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
  id: HasMinValue
  parent: ElectricDrill.SimpleRpgCore.BoundedValue
  langs:
  - csharp
  - vb
  name: HasMinValue
  nameWithType: BoundedValue.HasMinValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/BoundedValue.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: HasMinValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/BoundedValue.cs
    startLine: 14
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public bool HasMinValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasMinValue As Boolean
  overload: ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue*
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
  commentId: P:ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
  id: MinValue
  parent: ElectricDrill.SimpleRpgCore.BoundedValue
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: BoundedValue.MinValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/BoundedValue.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: MinValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/BoundedValue.cs
    startLine: 15
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore
  syntax:
    content: public int MinValue { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinValue As Integer
  overload: ElectricDrill.SimpleRpgCore.BoundedValue.MinValue*
references:
- uid: ElectricDrill.SimpleRpgCore
  commentId: N:ElectricDrill.SimpleRpgCore
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore
  nameWithType: ElectricDrill.SimpleRpgCore
  fullName: ElectricDrill.SimpleRpgCore
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
  href: ElectricDrill.SimpleRpgCore.BoundedValue.html#ElectricDrill_SimpleRpgCore_BoundedValue_HasMaxValue
  name: HasMaxValue
  nameWithType: BoundedValue.HasMaxValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.HasMaxValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
  href: ElectricDrill.SimpleRpgCore.BoundedValue.html#ElectricDrill_SimpleRpgCore_BoundedValue_MaxValue
  name: MaxValue
  nameWithType: BoundedValue.MaxValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.MaxValue
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
  href: ElectricDrill.SimpleRpgCore.BoundedValue.html#ElectricDrill_SimpleRpgCore_BoundedValue_HasMinValue
  name: HasMinValue
  nameWithType: BoundedValue.HasMinValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.HasMinValue
- uid: ElectricDrill.SimpleRpgCore.BoundedValue.MinValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
  href: ElectricDrill.SimpleRpgCore.BoundedValue.html#ElectricDrill_SimpleRpgCore_BoundedValue_MinValue
  name: MinValue
  nameWithType: BoundedValue.MinValue
  fullName: ElectricDrill.SimpleRpgCore.BoundedValue.MinValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
