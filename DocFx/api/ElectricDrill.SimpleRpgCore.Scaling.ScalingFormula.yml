### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  commentId: T:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  id: ScalingFormula
  parent: ElectricDrill.SimpleRpgCore.Scaling
  children:
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore)
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
  langs:
  - csharp
  - vb
  name: ScalingFormula
  nameWithType: ScalingFormula
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: ScalingFormula
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 11
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: 'public class ScalingFormula : ScriptableObject'
    content.vb: Public Class ScalingFormula Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
  commentId: P:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
  id: TmpSelfScalingComponents
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: TmpSelfScalingComponents
  nameWithType: ScalingFormula.TmpSelfScalingComponents
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: TmpSelfScalingComponents
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 24
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public List<ScalingComponent> TmpSelfScalingComponents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent}
    content.vb: Public ReadOnly Property TmpSelfScalingComponents As List(Of ScalingComponent)
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents*
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
  commentId: P:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
  id: TmpTargetScalingComponents
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: TmpTargetScalingComponents
  nameWithType: ScalingFormula.TmpTargetScalingComponents
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: TmpTargetScalingComponents
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 25
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public List<ScalingComponent> TmpTargetScalingComponents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent}
    content.vb: Public ReadOnly Property TmpTargetScalingComponents As List(Of ScalingComponent)
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents*
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  id: CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: CalculateValue(EntityCore)
  nameWithType: ScalingFormula.CalculateValue(EntityCore)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CalculateValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 28
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public long CalculateValue(EntityCore self)
    parameters:
    - id: self
      type: ElectricDrill.SimpleRpgCore.EntityCore
    return:
      type: System.Int64
    content.vb: Public Function CalculateValue(self As EntityCore) As Long
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue*
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  id: CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: CalculateValue(EntityCore, int)
  nameWithType: ScalingFormula.CalculateValue(EntityCore, int)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore, int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CalculateValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 34
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public long CalculateValue(EntityCore self, int level)
    parameters:
    - id: self
      type: ElectricDrill.SimpleRpgCore.EntityCore
    - id: level
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Function CalculateValue(self As EntityCore, level As Integer) As Long
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue*
  nameWithType.vb: ScalingFormula.CalculateValue(EntityCore, Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore, Integer)
  name.vb: CalculateValue(EntityCore, Integer)
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore)
  id: CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore)
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: CalculateValue(EntityCore, EntityCore)
  nameWithType: ScalingFormula.CalculateValue(EntityCore, EntityCore)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore, ElectricDrill.SimpleRpgCore.EntityCore)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CalculateValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 41
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public long CalculateValue(EntityCore self, EntityCore target)
    parameters:
    - id: self
      type: ElectricDrill.SimpleRpgCore.EntityCore
    - id: target
      type: ElectricDrill.SimpleRpgCore.EntityCore
    return:
      type: System.Int64
    content.vb: Public Function CalculateValue(self As EntityCore, target As EntityCore) As Long
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue*
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  id: CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore,ElectricDrill.SimpleRpgCore.EntityCore,System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: CalculateValue(EntityCore, EntityCore, int)
  nameWithType: ScalingFormula.CalculateValue(EntityCore, EntityCore, int)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore, ElectricDrill.SimpleRpgCore.EntityCore, int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CalculateValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 47
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public long CalculateValue(EntityCore self, EntityCore target, int level)
    parameters:
    - id: self
      type: ElectricDrill.SimpleRpgCore.EntityCore
    - id: target
      type: ElectricDrill.SimpleRpgCore.EntityCore
    - id: level
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Function CalculateValue(self As EntityCore, target As EntityCore, level As Integer) As Long
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue*
  nameWithType.vb: ScalingFormula.CalculateValue(EntityCore, EntityCore, Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore, ElectricDrill.SimpleRpgCore.EntityCore, Integer)
  name.vb: CalculateValue(EntityCore, EntityCore, Integer)
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings
  id: ResetTmpScalings
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula
  langs:
  - csharp
  - vb
  name: ResetTmpScalings()
  nameWithType: ScalingFormula.ResetTmpScalings()
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: ResetTmpScalings
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Scaling/ScalingFormula.cs
    startLine: 54
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: public void ResetTmpScalings()
    content.vb: Public Sub ResetTmpScalings()
  overload: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings*
references:
- uid: ElectricDrill.SimpleRpgCore.Scaling
  commentId: N:ElectricDrill.SimpleRpgCore.Scaling
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Scaling
  nameWithType: ElectricDrill.SimpleRpgCore.Scaling
  fullName: ElectricDrill.SimpleRpgCore.Scaling
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Scaling
    name: Scaling
    href: ElectricDrill.SimpleRpgCore.Scaling.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Scaling
    name: Scaling
    href: ElectricDrill.SimpleRpgCore.Scaling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingFormula_TmpSelfScalingComponents
  name: TmpSelfScalingComponents
  nameWithType: ScalingFormula.TmpSelfScalingComponents
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpSelfScalingComponents
- uid: System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent}
  commentId: T:System.Collections.Generic.List{ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html
  name: List<ScalingComponent>
  nameWithType: List<ScalingComponent>
  fullName: System.Collections.Generic.List<ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent>
  nameWithType.vb: List(Of ScalingComponent)
  fullName.vb: System.Collections.Generic.List(Of ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent)
  name.vb: List(Of ScalingComponent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
    name: ScalingComponent
    href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
    name: ScalingComponent
    href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingFormula_TmpTargetScalingComponents
  name: TmpTargetScalingComponents
  nameWithType: ScalingFormula.TmpTargetScalingComponents
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.TmpTargetScalingComponents
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingFormula_CalculateValue_ElectricDrill_SimpleRpgCore_EntityCore_
  name: CalculateValue
  nameWithType: ScalingFormula.CalculateValue
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.CalculateValue
- uid: ElectricDrill.SimpleRpgCore.EntityCore
  commentId: T:ElectricDrill.SimpleRpgCore.EntityCore
  parent: ElectricDrill.SimpleRpgCore
  href: ElectricDrill.SimpleRpgCore.EntityCore.html
  name: EntityCore
  nameWithType: EntityCore
  fullName: ElectricDrill.SimpleRpgCore.EntityCore
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore
  commentId: N:ElectricDrill.SimpleRpgCore
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore
  nameWithType: ElectricDrill.SimpleRpgCore
  fullName: ElectricDrill.SimpleRpgCore
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingFormula_ResetTmpScalings
  name: ResetTmpScalings
  nameWithType: ScalingFormula.ResetTmpScalings
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingFormula.ResetTmpScalings
