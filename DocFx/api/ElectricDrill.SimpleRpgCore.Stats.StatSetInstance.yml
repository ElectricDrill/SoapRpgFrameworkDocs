### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  commentId: T:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  id: StatSetInstance
  parent: ElectricDrill.SimpleRpgCore.Stats
  children:
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor(ElectricDrill.SimpleRpgCore.Stats.StatSet)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get(ElectricDrill.SimpleRpgCore.Stats.Stat)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage(ElectricDrill.SimpleRpgCore.Stats.Stat)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item(ElectricDrill.SimpleRpgCore.Stats.Stat)
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
  - ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance,ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  langs:
  - csharp
  - vb
  name: StatSetInstance
  nameWithType: StatSetInstance
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: StatSetInstance
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 8
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: 'public class StatSetInstance : IStatContainer'
    content.vb: Public Class StatSetInstance Implements IStatContainer
  inheritance:
  - System.Object
  implements:
  - ElectricDrill.SimpleRpgCore.Stats.IStatContainer
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor(ElectricDrill.SimpleRpgCore.Stats.StatSet)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor(ElectricDrill.SimpleRpgCore.Stats.StatSet)
  id: '#ctor(ElectricDrill.SimpleRpgCore.Stats.StatSet)'
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: StatSetInstance(StatSet)
  nameWithType: StatSetInstance.StatSetInstance(StatSet)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.StatSetInstance(ElectricDrill.SimpleRpgCore.Stats.StatSet)
  type: Constructor
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: .ctor
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 14
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: public StatSetInstance(StatSet statSet)
    parameters:
    - id: statSet
      type: ElectricDrill.SimpleRpgCore.Stats.StatSet
    content.vb: Public Sub New(statSet As StatSet)
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor*
  nameWithType.vb: StatSetInstance.New(StatSet)
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.New(ElectricDrill.SimpleRpgCore.Stats.StatSet)
  name.vb: New(StatSet)
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
  commentId: P:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
  id: Stats
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: StatSetInstance.Stats
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Stats
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 20
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: public Dictionary<Stat, long> Stats { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}
    content.vb: Public ReadOnly Property Stats As Dictionary(Of Stat, Long)
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats*
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64)
  id: AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: AddValue(Stat, long)
  nameWithType: StatSetInstance.AddValue(Stat, long)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat, long)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: AddValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 29
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  summary: >-
    Adds <code class="paramref">value</code> to <code class="paramref">stat</code>. If the stat does not exist, it will be created and

    initialized with <code class="paramref">value</code>. Use negative values to subtract from the stat.
  example: []
  syntax:
    content: public void AddValue(Stat stat, long value)
    parameters:
    - id: stat
      type: ElectricDrill.SimpleRpgCore.Stats.Stat
      description: The stat to add the value to.
    - id: value
      type: System.Int64
      description: The value to add to the stat.
    content.vb: Public Sub AddValue(stat As Stat, value As Long)
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue*
  nameWithType.vb: StatSetInstance.AddValue(Stat, Long)
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue(ElectricDrill.SimpleRpgCore.Stats.Stat, Long)
  name.vb: AddValue(Stat, Long)
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get(ElectricDrill.SimpleRpgCore.Stats.Stat)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get(ElectricDrill.SimpleRpgCore.Stats.Stat)
  id: Get(ElectricDrill.SimpleRpgCore.Stats.Stat)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: Get(Stat)
  nameWithType: StatSetInstance.Get(Stat)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get(ElectricDrill.SimpleRpgCore.Stats.Stat)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Get
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 38
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  summary: ''
  example: []
  syntax:
    content: public long Get(Stat stat)
    parameters:
    - id: stat
      type: ElectricDrill.SimpleRpgCore.Stats.Stat
      description: The stat to be retrieved.
    return:
      type: System.Int64
      description: The value of the <code class="paramref">stat</code>
    content.vb: Public Function [Get](stat As Stat) As Long
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get*
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item(ElectricDrill.SimpleRpgCore.Stats.Stat)
  commentId: P:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item(ElectricDrill.SimpleRpgCore.Stats.Stat)
  id: Item(ElectricDrill.SimpleRpgCore.Stats.Stat)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: this[Stat]
  nameWithType: StatSetInstance.this[Stat]
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.this[ElectricDrill.SimpleRpgCore.Stats.Stat]
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: this[]
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 43
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: public long this[Stat stat] { get; set; }
    parameters:
    - id: stat
      type: ElectricDrill.SimpleRpgCore.Stats.Stat
    return:
      type: System.Int64
    content.vb: Public Default Property this[](stat As Stat) As Long
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item*
  nameWithType.vb: StatSetInstance.this[](Stat)
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.this[](ElectricDrill.SimpleRpgCore.Stats.Stat)
  name.vb: this[](Stat)
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone
  id: Clone
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: StatSetInstance.Clone()
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Clone
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 48
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: public StatSetInstance Clone()
    return:
      type: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
    content.vb: Public Function Clone() As StatSetInstance
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone*
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  id: Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: Contains(Stat)
  nameWithType: StatSetInstance.Contains(Stat)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Contains
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 56
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  example: []
  syntax:
    content: public bool Contains(Stat stat)
    parameters:
    - id: stat
      type: ElectricDrill.SimpleRpgCore.Stats.Stat
    return:
      type: System.Boolean
    content.vb: Public Function Contains(stat As Stat) As Boolean
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains*
  implements:
  - ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage(ElectricDrill.SimpleRpgCore.Stats.Stat)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage(ElectricDrill.SimpleRpgCore.Stats.Stat)
  id: GetAsPercentage(ElectricDrill.SimpleRpgCore.Stats.Stat)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: GetAsPercentage(Stat)
  nameWithType: StatSetInstance.GetAsPercentage(Stat)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage(ElectricDrill.SimpleRpgCore.Stats.Stat)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetAsPercentage
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 60
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  syntax:
    content: public Percentage GetAsPercentage(Stat stat)
    parameters:
    - id: stat
      type: ElectricDrill.SimpleRpgCore.Stats.Stat
    return:
      type: ElectricDrill.SimpleRpgCore.Utils.Percentage
    content.vb: Public Function GetAsPercentage(stat As Stat) As Percentage
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage*
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator
  id: GetEnumerator
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: StatSetInstance.GetEnumerator()
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetEnumerator
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 64
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<Stat, long>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of Stat, Long))
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator*
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance,ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance,ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  id: op_Addition(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance,ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  parent: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  langs:
  - csharp
  - vb
  name: operator +(StatSetInstance, StatSetInstance)
  nameWithType: StatSetInstance.operator +(StatSetInstance, StatSetInstance)
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.operator +(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance, ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  type: Operator
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: op_Addition
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/StatSetInstance.cs
    startLine: 82
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Stats
  summary: >-
    The addition operator for StatSetInstance. Considered the stats present in the StatSetInstance

    <code class="paramref">a</code>, their values will be summed with the values of the respective stats in the StatSetInstance

    <code class="paramref">b</code>. If a stat is present in the StatSetInstance <code class="paramref">a</code> but not in the

    StatSetInstance <code class="paramref">b</code>, an exception will be thrown.
  example: []
  syntax:
    content: public static StatSetInstance operator +(StatSetInstance a, StatSetInstance b)
    parameters:
    - id: a
      type: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
      description: The first StatSetInstance
    - id: b
      type: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
      description: The second StatSetInstance
    return:
      type: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
      description: >-
        A new StatSetInstance with the sum of the stats of <code class="paramref">a</code> to the respective values of
            the stats of <code class="paramref">b</code>
    content.vb: Public Shared Operator +(a As StatSetInstance, b As StatSetInstance) As StatSetInstance
  overload: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition*
  nameWithType.vb: StatSetInstance.+(StatSetInstance, StatSetInstance)
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.+(ElectricDrill.SimpleRpgCore.Stats.StatSetInstance, ElectricDrill.SimpleRpgCore.Stats.StatSetInstance)
  name.vb: +(StatSetInstance, StatSetInstance)
references:
- uid: ElectricDrill.SimpleRpgCore.Stats
  commentId: N:ElectricDrill.SimpleRpgCore.Stats
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Stats
  nameWithType: ElectricDrill.SimpleRpgCore.Stats
  fullName: ElectricDrill.SimpleRpgCore.Stats
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Stats
    name: Stats
    href: ElectricDrill.SimpleRpgCore.Stats.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Stats
    name: Stats
    href: ElectricDrill.SimpleRpgCore.Stats.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ElectricDrill.SimpleRpgCore.Stats.IStatContainer
  commentId: T:ElectricDrill.SimpleRpgCore.Stats.IStatContainer
  parent: ElectricDrill.SimpleRpgCore.Stats
  href: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.html
  name: IStatContainer
  nameWithType: IStatContainer
  fullName: ElectricDrill.SimpleRpgCore.Stats.IStatContainer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.#ctor
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance__ctor_ElectricDrill_SimpleRpgCore_Stats_StatSet_
  name: StatSetInstance
  nameWithType: StatSetInstance.StatSetInstance
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.StatSetInstance
  nameWithType.vb: StatSetInstance.New
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.New
  name.vb: New
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSet
  commentId: T:ElectricDrill.SimpleRpgCore.Stats.StatSet
  parent: ElectricDrill.SimpleRpgCore.Stats
  href: ElectricDrill.SimpleRpgCore.Stats.StatSet.html
  name: StatSet
  nameWithType: StatSet
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSet
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_Stats
  name: Stats
  nameWithType: StatSetInstance.Stats
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Stats
- uid: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}
  commentId: T:System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  name: Dictionary<Stat, long>
  nameWithType: Dictionary<Stat, long>
  fullName: System.Collections.Generic.Dictionary<ElectricDrill.SimpleRpgCore.Stats.Stat, long>
  nameWithType.vb: Dictionary(Of Stat, Long)
  fullName.vb: System.Collections.Generic.Dictionary(Of ElectricDrill.SimpleRpgCore.Stats.Stat, Long)
  name.vb: Dictionary(Of Stat, Long)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_AddValue_ElectricDrill_SimpleRpgCore_Stats_Stat_System_Int64_
  name: AddValue
  nameWithType: StatSetInstance.AddValue
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.AddValue
- uid: ElectricDrill.SimpleRpgCore.Stats.Stat
  commentId: T:ElectricDrill.SimpleRpgCore.Stats.Stat
  parent: ElectricDrill.SimpleRpgCore.Stats
  href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  name: Stat
  nameWithType: Stat
  fullName: ElectricDrill.SimpleRpgCore.Stats.Stat
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_Get_ElectricDrill_SimpleRpgCore_Stats_Stat_
  name: Get
  nameWithType: StatSetInstance.Get
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Get
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Item
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_Item_ElectricDrill_SimpleRpgCore_Stats_Stat_
  name: this
  nameWithType: StatSetInstance.this
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.this
  nameWithType.vb: StatSetInstance.this[]
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.this[]
  name.vb: this[]
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_Clone
  name: Clone
  nameWithType: StatSetInstance.Clone
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Clone
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  commentId: T:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
  parent: ElectricDrill.SimpleRpgCore.Stats
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html
  name: StatSetInstance
  nameWithType: StatSetInstance
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_Contains_ElectricDrill_SimpleRpgCore_Stats_Stat_
  name: Contains
  nameWithType: StatSetInstance.Contains
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.Contains
- uid: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  commentId: M:ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  parent: ElectricDrill.SimpleRpgCore.Stats.IStatContainer
  href: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.html#ElectricDrill_SimpleRpgCore_Stats_IStatContainer_Contains_ElectricDrill_SimpleRpgCore_Stats_Stat_
  name: Contains(Stat)
  nameWithType: IStatContainer.Contains(Stat)
  fullName: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
    name: Contains
    href: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.html#ElectricDrill_SimpleRpgCore_Stats_IStatContainer_Contains_ElectricDrill_SimpleRpgCore_Stats_Stat_
  - name: (
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.Contains(ElectricDrill.SimpleRpgCore.Stats.Stat)
    name: Contains
    href: ElectricDrill.SimpleRpgCore.Stats.IStatContainer.html#ElectricDrill_SimpleRpgCore_Stats_IStatContainer_Contains_ElectricDrill_SimpleRpgCore_Stats_Stat_
  - name: (
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_GetAsPercentage_ElectricDrill_SimpleRpgCore_Stats_Stat_
  name: GetAsPercentage
  nameWithType: StatSetInstance.GetAsPercentage
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetAsPercentage
- uid: ElectricDrill.SimpleRpgCore.Utils.Percentage
  commentId: T:ElectricDrill.SimpleRpgCore.Utils.Percentage
  parent: ElectricDrill.SimpleRpgCore.Utils
  href: ElectricDrill.SimpleRpgCore.Utils.Percentage.html
  name: Percentage
  nameWithType: Percentage
  fullName: ElectricDrill.SimpleRpgCore.Utils.Percentage
- uid: ElectricDrill.SimpleRpgCore.Utils
  commentId: N:ElectricDrill.SimpleRpgCore.Utils
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Utils
  nameWithType: ElectricDrill.SimpleRpgCore.Utils
  fullName: ElectricDrill.SimpleRpgCore.Utils
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_GetEnumerator
  name: GetEnumerator
  nameWithType: StatSetInstance.GetEnumerator
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{ElectricDrill.SimpleRpgCore.Stats.Stat,System.Int64}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  name: IEnumerator<KeyValuePair<Stat, long>>
  nameWithType: IEnumerator<KeyValuePair<Stat, long>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<ElectricDrill.SimpleRpgCore.Stats.Stat, long>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Stat, Long))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of ElectricDrill.SimpleRpgCore.Stats.Stat, Long))
  name.vb: IEnumerator(Of KeyValuePair(Of Stat, Long))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Stats.Stat
    name: Stat
    href: ElectricDrill.SimpleRpgCore.Stats.Stat.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition
  href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_op_Addition_ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_
  name: operator +
  nameWithType: StatSetInstance.operator +
  fullName: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.operator +
  nameWithType.vb: StatSetInstance.+
  fullName.vb: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.op_Addition*
    name: +
    href: ElectricDrill.SimpleRpgCore.Stats.StatSetInstance.html#ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_op_Addition_ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_ElectricDrill_SimpleRpgCore_Stats_StatSetInstance_
