### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  commentId: T:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  id: AttributePointsTracker
  parent: ElectricDrill.SimpleRpgCore.Attributes
  children:
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints(System.Int32)
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  - ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
  langs:
  - csharp
  - vb
  name: AttributePointsTracker
  nameWithType: AttributePointsTracker
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: AttributePointsTracker
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 9
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: >-
      [Serializable]

      public class AttributePointsTracker
    content.vb: >-
      <Serializable>

      Public Class AttributePointsTracker
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
  commentId: P:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
  id: Available
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: Available
  nameWithType: AttributePointsTracker.Available
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Available
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 15
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public int Available { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Available As Integer
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available*
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
  commentId: P:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
  id: SpentAttributesKeys
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: SpentAttributesKeys
  nameWithType: AttributePointsTracker.SpentAttributesKeys
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SpentAttributesKeys
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 20
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public Dictionary<Attribute, int>.KeyCollection SpentAttributesKeys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32}.KeyCollection
    content.vb: Public ReadOnly Property SpentAttributesKeys As Dictionary(Of Attribute, Integer).KeyCollection
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys*
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints(System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints(System.Int32)
  id: AddPoints(System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: AddPoints(int)
  nameWithType: AttributePointsTracker.AddPoints(int)
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints(int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: AddPoints
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 33
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public void AddPoints(int amount)
    parameters:
    - id: amount
      type: System.Int32
    content.vb: Public Sub AddPoints(amount As Integer)
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints*
  nameWithType.vb: AttributePointsTracker.AddPoints(Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints(Integer)
  name.vb: AddPoints(Integer)
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  id: GetSpentOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: GetSpentOn(Attribute)
  nameWithType: AttributePointsTracker.GetSpentOn(Attribute)
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetSpentOn
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 37
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public long GetSpentOn(Attribute attribute)
    parameters:
    - id: attribute
      type: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    return:
      type: System.Int64
    content.vb: Public Function GetSpentOn(attribute As Attribute) As Long
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn*
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  id: SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: SpendOn(Attribute, int)
  nameWithType: AttributePointsTracker.SpendOn(Attribute, int)
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute, int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SpendOn
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 41
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public void SpendOn(Attribute attribute, int amount)
    parameters:
    - id: attribute
      type: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    - id: amount
      type: System.Int32
    content.vb: Public Sub SpendOn(attribute As Attribute, amount As Integer)
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn*
  nameWithType.vb: AttributePointsTracker.SpendOn(Attribute, Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn(ElectricDrill.SimpleRpgCore.Attributes.Attribute, Integer)
  name.vb: SpendOn(Attribute, Integer)
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  id: Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: Refund(Attribute, int)
  nameWithType: AttributePointsTracker.Refund(Attribute, int)
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute, int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Refund
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 51
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public void Refund(Attribute attribute, int amount)
    parameters:
    - id: attribute
      type: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    - id: amount
      type: System.Int32
    content.vb: Public Sub Refund(attribute As Attribute, amount As Integer)
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund*
  nameWithType.vb: AttributePointsTracker.Refund(Attribute, Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute, Integer)
  name.vb: Refund(Attribute, Integer)
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  id: Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: Refund(Attribute)
  nameWithType: AttributePointsTracker.Refund(Attribute)
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund(ElectricDrill.SimpleRpgCore.Attributes.Attribute)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Refund
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 61
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public void Refund(Attribute attribute)
    parameters:
    - id: attribute
      type: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    content.vb: Public Sub Refund(attribute As Attribute)
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund*
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll
  commentId: M:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll
  id: RefundAll
  parent: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker
  langs:
  - csharp
  - vb
  name: RefundAll()
  nameWithType: AttributePointsTracker.RefundAll()
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: RefundAll
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Attributes/AttributePointsTracker.cs
    startLine: 70
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Attributes
  syntax:
    content: public void RefundAll()
    content.vb: Public Sub RefundAll()
  overload: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll*
references:
- uid: ElectricDrill.SimpleRpgCore.Attributes
  commentId: N:ElectricDrill.SimpleRpgCore.Attributes
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Attributes
  nameWithType: ElectricDrill.SimpleRpgCore.Attributes
  fullName: ElectricDrill.SimpleRpgCore.Attributes
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Attributes
    name: Attributes
    href: ElectricDrill.SimpleRpgCore.Attributes.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Attributes
    name: Attributes
    href: ElectricDrill.SimpleRpgCore.Attributes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_Available
  name: Available
  nameWithType: AttributePointsTracker.Available
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Available
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_SpentAttributesKeys
  name: SpentAttributesKeys
  nameWithType: AttributePointsTracker.SpentAttributesKeys
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpentAttributesKeys
- uid: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32}.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32}.KeyCollection
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2.KeyCollection
  href: ElectricDrill.SimpleRpgCore.Attributes.Attribute.html
  name: Dictionary<Attribute, int>.KeyCollection
  nameWithType: Dictionary<Attribute, int>.KeyCollection
  fullName: System.Collections.Generic.Dictionary<ElectricDrill.SimpleRpgCore.Attributes.Attribute, int>.KeyCollection
  nameWithType.vb: Dictionary(Of Attribute, Integer).KeyCollection
  fullName.vb: System.Collections.Generic.Dictionary(Of ElectricDrill.SimpleRpgCore.Attributes.Attribute, Integer).KeyCollection
  name.vb: Dictionary(Of Attribute, Integer).KeyCollection
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    name: Attribute
    href: ElectricDrill.SimpleRpgCore.Attributes.Attribute.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  - name: .
  - uid: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32}.KeyCollection
    name: KeyCollection
    isExternal: true
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ElectricDrill.SimpleRpgCore.Attributes.Attribute
    name: Attribute
    href: ElectricDrill.SimpleRpgCore.Attributes.Attribute.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
  - name: .
  - uid: System.Collections.Generic.Dictionary{ElectricDrill.SimpleRpgCore.Attributes.Attribute,System.Int32}.KeyCollection
    name: KeyCollection
    isExternal: true
- uid: System.Collections.Generic.Dictionary`2.KeyCollection
  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection
  isExternal: true
  name: Dictionary<TKey, TValue>.KeyCollection
  nameWithType: Dictionary<TKey, TValue>.KeyCollection
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection
  name.vb: Dictionary(Of TKey, TValue).KeyCollection
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: .
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: KeyCollection
    isExternal: true
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: .
  - uid: System.Collections.Generic.Dictionary`2.KeyCollection
    name: KeyCollection
    isExternal: true
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_AddPoints_System_Int32_
  name: AddPoints
  nameWithType: AttributePointsTracker.AddPoints
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.AddPoints
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_GetSpentOn_ElectricDrill_SimpleRpgCore_Attributes_Attribute_
  name: GetSpentOn
  nameWithType: AttributePointsTracker.GetSpentOn
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.GetSpentOn
- uid: ElectricDrill.SimpleRpgCore.Attributes.Attribute
  commentId: T:ElectricDrill.SimpleRpgCore.Attributes.Attribute
  parent: ElectricDrill.SimpleRpgCore.Attributes
  href: ElectricDrill.SimpleRpgCore.Attributes.Attribute.html
  name: Attribute
  nameWithType: Attribute
  fullName: ElectricDrill.SimpleRpgCore.Attributes.Attribute
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_SpendOn_ElectricDrill_SimpleRpgCore_Attributes_Attribute_System_Int32_
  name: SpendOn
  nameWithType: AttributePointsTracker.SpendOn
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.SpendOn
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_Refund_ElectricDrill_SimpleRpgCore_Attributes_Attribute_System_Int32_
  name: Refund
  nameWithType: AttributePointsTracker.Refund
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.Refund
- uid: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll
  href: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.html#ElectricDrill_SimpleRpgCore_Attributes_AttributePointsTracker_RefundAll
  name: RefundAll
  nameWithType: AttributePointsTracker.RefundAll
  fullName: ElectricDrill.SimpleRpgCore.Attributes.AttributePointsTracker.RefundAll
