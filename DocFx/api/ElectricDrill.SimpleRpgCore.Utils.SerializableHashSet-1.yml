### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  commentId: T:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  id: SerializableHashSet`1
  parent: ElectricDrill.SimpleRpgCore.Utils
  children:
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add(`0)
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains(`0)
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo(`0[],System.Int32)
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove(`0)
  - ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere(System.Predicate{`0})
  langs:
  - csharp
  - vb
  name: SerializableHashSet<T>
  nameWithType: SerializableHashSet<T>
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SerializableHashSet
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 10
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: >-
      [Serializable]

      public class SerializableHashSet<T>
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class SerializableHashSet(Of T)
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: SerializableHashSet(Of T)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T)
  name.vb: SerializableHashSet(Of T)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: SerializableHashSet<T>.OnBeforeSerialize()
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnBeforeSerialize
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 20
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  summary: <p>Implement this callback to transform data into serializable data types immediately before an object is serialized.</p>
  example: []
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize()
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize*
  nameWithType.vb: SerializableHashSet(Of T).OnBeforeSerialize()
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).OnBeforeSerialize()
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: SerializableHashSet<T>.OnAfterDeserialize()
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnAfterDeserialize
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 41
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  summary: <p>Implement this callback to transform data back into runtime data types after an object is deserialized.</p>
  example: []
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize()
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize*
  nameWithType.vb: SerializableHashSet(Of T).OnAfterDeserialize()
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).OnAfterDeserialize()
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator
  id: GetEnumerator
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SerializableHashSet<T>.GetEnumerator()
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetEnumerator
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 71
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator*
  nameWithType.vb: SerializableHashSet(Of T).GetEnumerator()
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).GetEnumerator()
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count
  commentId: P:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count
  id: Count
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SerializableHashSet<T>.Count
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Count
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Count
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 79
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count*
  nameWithType.vb: SerializableHashSet(Of T).Count
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Count
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add(`0)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add(`0)
  id: Add(`0)
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: SerializableHashSet<T>.Add(T)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Add(T)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Add
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 81
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Add(item As T)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add*
  nameWithType.vb: SerializableHashSet(Of T).Add(T)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Add(T)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear
  id: Clear
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SerializableHashSet<T>.Clear()
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Clear()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Clear
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 85
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear*
  nameWithType.vb: SerializableHashSet(Of T).Clear()
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Clear()
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains(`0)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains(`0)
  id: Contains(`0)
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: SerializableHashSet<T>.Contains(T)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Contains(T)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Contains
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 89
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As T) As Boolean
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains*
  nameWithType.vb: SerializableHashSet(Of T).Contains(T)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Contains(T)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo(`0[],System.Int32)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: SerializableHashSet<T>.CopyTo(T[], int)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CopyTo
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 93
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo*
  nameWithType.vb: SerializableHashSet(Of T).CopyTo(T(), Integer)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove(`0)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove(`0)
  id: Remove(`0)
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: SerializableHashSet<T>.Remove(T)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Remove
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 97
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As T) As Boolean
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove*
  nameWithType.vb: SerializableHashSet(Of T).Remove(T)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Remove(T)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere(System.Predicate{`0})
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere(System.Predicate{`0})
  id: RemoveWhere(System.Predicate{`0})
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: RemoveWhere(Predicate<T>)
  nameWithType: SerializableHashSet<T>.RemoveWhere(Predicate<T>)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.RemoveWhere(System.Predicate<T>)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: RemoveWhere
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 101
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public int RemoveWhere(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
    content.vb: Public Function RemoveWhere(match As Predicate(Of T)) As Integer
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere*
  nameWithType.vb: SerializableHashSet(Of T).RemoveWhere(Predicate(Of T))
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).RemoveWhere(System.Predicate(Of T))
  name.vb: RemoveWhere(Predicate(Of T))
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly
  commentId: P:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly
  id: IsReadOnly
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: SerializableHashSet<T>.IsReadOnly
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: IsReadOnly
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 106
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly*
  nameWithType.vb: SerializableHashSet(Of T).IsReadOnly
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).IsReadOnly
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: SerializableHashSet<T>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetObjectData
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SerializableHashSet.cs
    startLine: 108
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  example: []
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
    - id: context
      type: System.Runtime.Serialization.StreamingContext
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData*
  nameWithType.vb: SerializableHashSet(Of T).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
references:
- uid: ElectricDrill.SimpleRpgCore.Utils
  commentId: N:ElectricDrill.SimpleRpgCore.Utils
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Utils
  nameWithType: ElectricDrill.SimpleRpgCore.Utils
  fullName: ElectricDrill.SimpleRpgCore.Utils
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnBeforeSerialize
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: SerializableHashSet<T>.OnBeforeSerialize
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.OnBeforeSerialize
  nameWithType.vb: SerializableHashSet(Of T).OnBeforeSerialize
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).OnBeforeSerialize
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.OnAfterDeserialize
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: SerializableHashSet<T>.OnAfterDeserialize
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.OnAfterDeserialize
  nameWithType.vb: SerializableHashSet(Of T).OnAfterDeserialize
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).OnAfterDeserialize
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetEnumerator
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_GetEnumerator
  name: GetEnumerator
  nameWithType: SerializableHashSet<T>.GetEnumerator
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.GetEnumerator
  nameWithType.vb: SerializableHashSet(Of T).GetEnumerator
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Count
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_Count
  name: Count
  nameWithType: SerializableHashSet<T>.Count
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Count
  nameWithType.vb: SerializableHashSet(Of T).Count
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Add
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_Add__0_
  name: Add
  nameWithType: SerializableHashSet<T>.Add
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Add
  nameWithType.vb: SerializableHashSet(Of T).Add
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Clear
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_Clear
  name: Clear
  nameWithType: SerializableHashSet<T>.Clear
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Clear
  nameWithType.vb: SerializableHashSet(Of T).Clear
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Clear
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Contains
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_Contains__0_
  name: Contains
  nameWithType: SerializableHashSet<T>.Contains
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Contains
  nameWithType.vb: SerializableHashSet(Of T).Contains
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.CopyTo
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: SerializableHashSet<T>.CopyTo
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.CopyTo
  nameWithType.vb: SerializableHashSet(Of T).CopyTo
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).CopyTo
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.Remove
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_Remove__0_
  name: Remove
  nameWithType: SerializableHashSet<T>.Remove
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.Remove
  nameWithType.vb: SerializableHashSet(Of T).Remove
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).Remove
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.RemoveWhere
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_RemoveWhere_System_Predicate__0__
  name: RemoveWhere
  nameWithType: SerializableHashSet<T>.RemoveWhere
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.RemoveWhere
  nameWithType.vb: SerializableHashSet(Of T).RemoveWhere
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).RemoveWhere
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.IsReadOnly
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_IsReadOnly
  name: IsReadOnly
  nameWithType: SerializableHashSet<T>.IsReadOnly
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.IsReadOnly
  nameWithType.vb: SerializableHashSet(Of T).IsReadOnly
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).IsReadOnly
- uid: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet`1.GetObjectData
  href: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet-1.html#ElectricDrill_SimpleRpgCore_Utils_SerializableHashSet_1_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  name: GetObjectData
  nameWithType: SerializableHashSet<T>.GetObjectData
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet<T>.GetObjectData
  nameWithType.vb: SerializableHashSet(Of T).GetObjectData
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerializableHashSet(Of T).GetObjectData
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
