### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  commentId: T:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  id: SoSetScalingComponentBase`2
  parent: ElectricDrill.SimpleRpgCore.Scaling
  children:
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore,`1)
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate
  - ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2._set
  langs:
  - csharp
  - vb
  name: SoSetScalingComponentBase<SetType, KeyType>
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>
  type: Class
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SoSetScalingComponentBase
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 10
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: 'public abstract class SoSetScalingComponentBase<SetType, KeyType> : ScalingComponent where SetType : ScriptableObject'
    typeParameters:
    - id: SetType
    - id: KeyType
    content.vb: Public MustInherit Class SoSetScalingComponentBase(Of SetType As ScriptableObject, KeyType) Inherits ScalingComponent
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
  derivedClasses:
  - ElectricDrill.SimpleRpgCore.Scaling.AttributesScalingComponent
  - ElectricDrill.SimpleRpgCore.Scaling.StatsScalingComponent
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType)
  name.vb: SoSetScalingComponentBase(Of SetType, KeyType)
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2._set
  commentId: F:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2._set
  id: _set
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: _set
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>._set
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>._set
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: _set
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 12
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: >-
      [SerializeField]

      protected SetType _set
    return:
      type: '{SetType}'
    content.vb: >-
      <SerializeField>

      Protected _set As SetType
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType)._set
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType)._set
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  id: CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: CalculateValue(EntityCore)
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.CalculateValue(EntityCore)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: CalculateValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 16
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  example: []
  syntax:
    content: public override long CalculateValue(EntityCore entity)
    parameters:
    - id: entity
      type: ElectricDrill.SimpleRpgCore.EntityCore
    return:
      type: System.Int64
    content.vb: Public Overrides Function CalculateValue(entity As EntityCore) As Long
  overridden: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  overload: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue*
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).CalculateValue(EntityCore)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
  id: GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: GetEntitySet(EntityCore)
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetEntitySet(EntityCore)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetEntitySet
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 25
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: protected abstract SetType GetEntitySet(EntityCore entity)
    parameters:
    - id: entity
      type: ElectricDrill.SimpleRpgCore.EntityCore
    return:
      type: '{SetType}'
    content.vb: Protected MustOverride Function GetEntitySet(entity As EntityCore) As SetType
  overload: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet*
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetEntitySet(EntityCore)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetEntitySet(ElectricDrill.SimpleRpgCore.EntityCore)
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore,`1)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore,`1)
  id: GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore,`1)
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: GetEntityValue(EntityCore, KeyType)
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetEntityValue(EntityCore, KeyType)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore, KeyType)
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetEntityValue
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 26
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: protected abstract long GetEntityValue(EntityCore entity, KeyType key)
    parameters:
    - id: entity
      type: ElectricDrill.SimpleRpgCore.EntityCore
    - id: key
      type: '{KeyType}'
    return:
      type: System.Int64
    content.vb: Protected MustOverride Function GetEntityValue(entity As EntityCore, key As KeyType) As Long
  overload: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue*
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetEntityValue(EntityCore, KeyType)
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetEntityValue(ElectricDrill.SimpleRpgCore.EntityCore, KeyType)
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate
  id: OnValidate
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: OnValidate()
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.OnValidate()
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.OnValidate()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: OnValidate
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 28
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: protected virtual void OnValidate()
    content.vb: Protected Overridable Sub OnValidate()
  overload: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate*
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).OnValidate()
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).OnValidate()
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems
  id: GetSetItems
  parent: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2
  langs:
  - csharp
  - vb
  name: GetSetItems()
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetSetItems()
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetSetItems()
  type: Method
  source:
    remote:
      path: Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: GetSetItems
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Utils/SoSetScalingComponentBase.cs
    startLine: 48
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Scaling
  syntax:
    content: protected abstract IEnumerable<KeyType> GetSetItems()
    return:
      type: System.Collections.Generic.IEnumerable{{KeyType}}
    content.vb: Protected MustOverride Function GetSetItems() As IEnumerable(Of KeyType)
  overload: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems*
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetSetItems()
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetSetItems()
references:
- uid: ElectricDrill.SimpleRpgCore.Scaling
  commentId: N:ElectricDrill.SimpleRpgCore.Scaling
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Scaling
  nameWithType: ElectricDrill.SimpleRpgCore.Scaling
  fullName: ElectricDrill.SimpleRpgCore.Scaling
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Scaling
    name: Scaling
    href: ElectricDrill.SimpleRpgCore.Scaling.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Scaling
    name: Scaling
    href: ElectricDrill.SimpleRpgCore.Scaling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
  commentId: T:ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
  parent: ElectricDrill.SimpleRpgCore.Scaling
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html
  name: ScalingComponent
  nameWithType: ScalingComponent
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: '{SetType}'
  commentId: '!:SetType'
  definition: SetType
  name: SetType
  nameWithType: SetType
  fullName: SetType
- uid: SetType
  name: SetType
  nameWithType: SetType
  fullName: SetType
- uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  commentId: M:ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  parent: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent
  href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingComponent_CalculateValue_ElectricDrill_SimpleRpgCore_EntityCore_
  name: CalculateValue(EntityCore)
  nameWithType: ScalingComponent.CalculateValue(EntityCore)
  fullName: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
    name: CalculateValue
    href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingComponent_CalculateValue_ElectricDrill_SimpleRpgCore_EntityCore_
  - name: (
  - uid: ElectricDrill.SimpleRpgCore.EntityCore
    name: EntityCore
    href: ElectricDrill.SimpleRpgCore.EntityCore.html
  - name: )
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.CalculateValue(ElectricDrill.SimpleRpgCore.EntityCore)
    name: CalculateValue
    href: ElectricDrill.SimpleRpgCore.Scaling.ScalingComponent.html#ElectricDrill_SimpleRpgCore_Scaling_ScalingComponent_CalculateValue_ElectricDrill_SimpleRpgCore_EntityCore_
  - name: (
  - uid: ElectricDrill.SimpleRpgCore.EntityCore
    name: EntityCore
    href: ElectricDrill.SimpleRpgCore.EntityCore.html
  - name: )
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.CalculateValue
  href: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase-2.html#ElectricDrill_SimpleRpgCore_Scaling_SoSetScalingComponentBase_2_CalculateValue_ElectricDrill_SimpleRpgCore_EntityCore_
  name: CalculateValue
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.CalculateValue
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.CalculateValue
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).CalculateValue
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).CalculateValue
- uid: ElectricDrill.SimpleRpgCore.EntityCore
  commentId: T:ElectricDrill.SimpleRpgCore.EntityCore
  parent: ElectricDrill.SimpleRpgCore
  href: ElectricDrill.SimpleRpgCore.EntityCore.html
  name: EntityCore
  nameWithType: EntityCore
  fullName: ElectricDrill.SimpleRpgCore.EntityCore
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ElectricDrill.SimpleRpgCore
  commentId: N:ElectricDrill.SimpleRpgCore
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore
  nameWithType: ElectricDrill.SimpleRpgCore
  fullName: ElectricDrill.SimpleRpgCore
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntitySet
  href: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase-2.html#ElectricDrill_SimpleRpgCore_Scaling_SoSetScalingComponentBase_2_GetEntitySet_ElectricDrill_SimpleRpgCore_EntityCore_
  name: GetEntitySet
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetEntitySet
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetEntitySet
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetEntitySet
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetEntitySet
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetEntityValue
  href: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase-2.html#ElectricDrill_SimpleRpgCore_Scaling_SoSetScalingComponentBase_2_GetEntityValue_ElectricDrill_SimpleRpgCore_EntityCore__1_
  name: GetEntityValue
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetEntityValue
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetEntityValue
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetEntityValue
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetEntityValue
- uid: '{KeyType}'
  commentId: '!:KeyType'
  definition: KeyType
  name: KeyType
  nameWithType: KeyType
  fullName: KeyType
- uid: KeyType
  commentId: '!:KeyType'
  name: KeyType
  nameWithType: KeyType
  fullName: KeyType
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.OnValidate
  href: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase-2.html#ElectricDrill_SimpleRpgCore_Scaling_SoSetScalingComponentBase_2_OnValidate
  name: OnValidate
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.OnValidate
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.OnValidate
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).OnValidate
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).OnValidate
- uid: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase`2.GetSetItems
  href: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase-2.html#ElectricDrill_SimpleRpgCore_Scaling_SoSetScalingComponentBase_2_GetSetItems
  name: GetSetItems
  nameWithType: SoSetScalingComponentBase<SetType, KeyType>.GetSetItems
  fullName: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase<SetType, KeyType>.GetSetItems
  nameWithType.vb: SoSetScalingComponentBase(Of SetType, KeyType).GetSetItems
  fullName.vb: ElectricDrill.SimpleRpgCore.Scaling.SoSetScalingComponentBase(Of SetType, KeyType).GetSetItems
- uid: System.Collections.Generic.IEnumerable{{KeyType}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyType>
  nameWithType: IEnumerable<KeyType>
  fullName: System.Collections.Generic.IEnumerable<KeyType>
  nameWithType.vb: IEnumerable(Of KeyType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of KeyType)
  name.vb: IEnumerable(Of KeyType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: KeyType
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: KeyType
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
