### YamlMime:ManagedReference
items:
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  commentId: T:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  id: SerKeyValPair`2
  parent: ElectricDrill.SimpleRpgCore.Utils
  children:
  - ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor(`0,`1)
  - ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Key
  - ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Value
  - ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  - ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(System.Collections.Generic.KeyValuePair{`0,`1})~ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1}
  langs:
  - csharp
  - vb
  name: SerKeyValPair<T, U>
  nameWithType: SerKeyValPair<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>
  type: Struct
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: SerKeyValPair
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 6
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: >-
      [Serializable]

      public struct SerKeyValPair<T, U>
    typeParameters:
    - id: T
    - id: U
    content.vb: >-
      <Serializable>

      Public Structure SerKeyValPair(Of T, U)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: SerKeyValPair(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U)
  name.vb: SerKeyValPair(Of T, U)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Key
  commentId: F:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Key
  id: Key
  parent: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: SerKeyValPair<T, U>.Key
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.Key
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Key
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 9
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public T Key
    return:
      type: '{T}'
    content.vb: Public Key As T
  nameWithType.vb: SerKeyValPair(Of T, U).Key
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).Key
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Value
  commentId: F:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.Value
  id: Value
  parent: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SerKeyValPair<T, U>.Value
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.Value
  type: Field
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: Value
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 10
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public U Value
    return:
      type: '{U}'
    content.vb: Public Value As U
  nameWithType.vb: SerKeyValPair(Of T, U).Value
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).Value
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor(`0,`1)
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  langs:
  - csharp
  - vb
  name: SerKeyValPair(T, U)
  nameWithType: SerKeyValPair<T, U>.SerKeyValPair(T, U)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.SerKeyValPair(T, U)
  type: Constructor
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: .ctor
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 12
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public SerKeyValPair(T key, U value)
    parameters:
    - id: key
      type: '{T}'
    - id: value
      type: '{U}'
    content.vb: Public Sub New(key As T, value As U)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor*
  nameWithType.vb: SerKeyValPair(Of T, U).New(T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).New(T, U)
  name.vb: New(T, U)
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  id: op_Implicit(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  parent: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  langs:
  - csharp
  - vb
  name: implicit operator KeyValuePair<T, U>(SerKeyValPair<T, U>)
  nameWithType: SerKeyValPair<T, U>.implicit operator KeyValuePair<T, U>(SerKeyValPair<T, U>)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.implicit operator System.Collections.Generic.KeyValuePair<T, U>(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>)
  type: Operator
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: op_Implicit
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 17
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public static implicit operator KeyValuePair<T, U>(SerKeyValPair<T, U> serKeyValPair)
    parameters:
    - id: serKeyValPair
      type: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
    return:
      type: System.Collections.Generic.KeyValuePair{{T},{U}}
    content.vb: Public Shared Widening Operator CType(serKeyValPair As SerKeyValPair(Of T, U)) As KeyValuePair(Of T, U)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit*
  nameWithType.vb: SerKeyValPair(Of T, U).CType(SerKeyValPair(Of T, U))
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).CType(ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U))
  name.vb: CType(SerKeyValPair(Of T, U))
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(System.Collections.Generic.KeyValuePair{`0,`1})~ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1}
  commentId: M:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit(System.Collections.Generic.KeyValuePair{`0,`1})~ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1}
  id: op_Implicit(System.Collections.Generic.KeyValuePair{`0,`1})~ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair{`0,`1}
  parent: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  langs:
  - csharp
  - vb
  name: implicit operator SerKeyValPair<T, U>(KeyValuePair<T, U>)
  nameWithType: SerKeyValPair<T, U>.implicit operator SerKeyValPair<T, U>(KeyValuePair<T, U>)
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.implicit operator ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>(System.Collections.Generic.KeyValuePair<T, U>)
  type: Operator
  source:
    remote:
      path: Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
      branch: main
      repo: https://github.com/Cis8/SoapRpgFramework
    id: op_Implicit
    path: ../../GeometricalInvaders/Packages/SimpleRPGCore/Runtime/SimpleRpgCore/Stats/SerKeyValPair.cs
    startLine: 21
  assemblies:
  - ElectricDrill.SimpleRPGCore.Runtime
  namespace: ElectricDrill.SimpleRpgCore.Utils
  syntax:
    content: public static implicit operator SerKeyValPair<T, U>(KeyValuePair<T, U> keyValuePair)
    parameters:
    - id: keyValuePair
      type: System.Collections.Generic.KeyValuePair{{T},{U}}
    return:
      type: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
    content.vb: Public Shared Widening Operator CType(keyValuePair As KeyValuePair(Of T, U)) As SerKeyValPair(Of T, U)
  overload: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit*
  nameWithType.vb: SerKeyValPair(Of T, U).CType(KeyValuePair(Of T, U))
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).CType(System.Collections.Generic.KeyValuePair(Of T, U))
  name.vb: CType(KeyValuePair(Of T, U))
references:
- uid: ElectricDrill.SimpleRpgCore.Utils
  commentId: N:ElectricDrill.SimpleRpgCore.Utils
  href: ElectricDrill.html
  name: ElectricDrill.SimpleRpgCore.Utils
  nameWithType: ElectricDrill.SimpleRpgCore.Utils
  fullName: ElectricDrill.SimpleRpgCore.Utils
  spec.csharp:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
  spec.vb:
  - uid: ElectricDrill
    name: ElectricDrill
    href: ElectricDrill.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore
    name: SimpleRpgCore
    href: ElectricDrill.SimpleRpgCore.html
  - name: .
  - uid: ElectricDrill.SimpleRpgCore.Utils
    name: Utils
    href: ElectricDrill.SimpleRpgCore.Utils.html
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.#ctor
  href: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair-2.html#ElectricDrill_SimpleRpgCore_Utils_SerKeyValPair_2__ctor__0__1_
  name: SerKeyValPair
  nameWithType: SerKeyValPair<T, U>.SerKeyValPair
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.SerKeyValPair
  nameWithType.vb: SerKeyValPair(Of T, U).New
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).New
  name.vb: New
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit*
  commentId: Overload:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2.op_Implicit
  name: implicit operator
  nameWithType: SerKeyValPair<T, U>.implicit operator
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>.implicit operator
  nameWithType.vb: SerKeyValPair(Of T, U).CType
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  commentId: T:ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
  parent: ElectricDrill.SimpleRpgCore.Utils
  href: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair-2.html
  name: SerKeyValPair<T, U>
  nameWithType: SerKeyValPair<T, U>
  fullName: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair<T, U>
  nameWithType.vb: SerKeyValPair(Of T, U)
  fullName.vb: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair(Of T, U)
  name.vb: SerKeyValPair(Of T, U)
  spec.csharp:
  - uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
    name: SerKeyValPair
    href: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair`2
    name: SerKeyValPair
    href: ElectricDrill.SimpleRpgCore.Utils.SerKeyValPair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: System.Collections.Generic.KeyValuePair{{T},{U}}
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<T, U>
  nameWithType: KeyValuePair<T, U>
  fullName: System.Collections.Generic.KeyValuePair<T, U>
  nameWithType.vb: KeyValuePair(Of T, U)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of T, U)
  name.vb: KeyValuePair(Of T, U)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
